PRACTICE

1 Create a database called mongotest

> use mongotest
switched to db mongotest


--------------------------------------------------------------------------------------

2 Change to mongotest db

> use mongotest
switched to db mongotest
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
test    0.000GB

--------------------------------------------------------------------------------------

3 Create collection Employee which has id, fname, salary  array for 12months(jan..dec), city

> db.createCollection("Employee")
{ "ok" : 1 }
> show collections
Employee

--------------------------------------------------------------------------------------

4 Insert data at list   12 data into Employee collection

> db.Employee.insert({id:"1",fname:"krishna",salary:[10000,15000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"hyd"})
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({id:"2",fname:"rama",salary:[12000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"chennai" })

WriteResult({ "nInserted" : 1 })
> db.Employee.insert({id:"3",fname:"amal",salary:[22000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"bombay" })
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({id:"4",fname:"ankit",salary:[12000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"Banglore" })
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({id:"5",fname:"sarada",salary:[21000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"gurgaon" })
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({id:"6",fname:"divya",salary:[21000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"gurgaon" })
WriteResult({ "nInserted" : 1 })
> db.Employee.insert({id:"7",fname:"nobita",salary:[18000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000],city:"Banglore" })
WriteResult({ "nInserted" : 1 })


--------------------------------------------------------------------------------------


Questions:

 Write a MongoDB query on Employee collection

1)  to display all the documents in the collection.  


> db.Employee.find().pretty()

OUTPUT:
{
	"_id" : ObjectId("5e9955eb0935cd687b34e813"),
	"id" : "1",
	"fname" : "krishna",
	"salary" : [
		10000,
		15000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "hyd"
}
{
	"_id" : ObjectId("5e9955f70935cd687b34e814"),
	"id" : "2",
	"fname" : "rama",
	"salary" : [
		12000,
		25000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "chennai"
}
{
	"_id" : ObjectId("5e9956150935cd687b34e815"),
	"id" : "3",
	"fname" : "amal",
	"salary" : [
		22000,
		25000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "bombay"
}
{
	"_id" : ObjectId("5e9956290935cd687b34e816"),
	"id" : "4",
	"fname" : "ankit",
	"salary" : [
		12000,
		25000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "Banglore"
}
{
	"_id" : ObjectId("5e9956400935cd687b34e817"),
	"id" : "5",
	"fname" : "sarada",
	"salary" : [
		21000,
		25000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "gurgaon"
}
{
	"_id" : ObjectId("5e9956590935cd687b34e818"),
	"id" : "6",
	"fname" : "divya",
	"salary" : [
		21000,
		25000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "gurgaon"
}
{
	"_id" : ObjectId("5e99566f0935cd687b34e819"),
	"id" : "7",
	"fname" : "nobita",
	"salary" : [
		18000,
		25000,
		17000,
		14000,
		17000,
		16000,
		18000,
		15000,
		19000,
		21000,
		22100,
		25000
	],
	"city" : "Banglore"
}

--------------------------------------------------------------------------------------


2.   to display the fields _id, fname  for all the documents in the collection.

> db.Employee.find({},{"_id":1,"fname":1})

OUTPUT:
{ "_id" : ObjectId("5e9955eb0935cd687b34e813"), "fname" : "krishna" }
{ "_id" : ObjectId("5e9955f70935cd687b34e814"), "fname" : "rama" }
{ "_id" : ObjectId("5e9956150935cd687b34e815"), "fname" : "amal" }
{ "_id" : ObjectId("5e9956290935cd687b34e816"), "fname" : "ankit" }
{ "_id" : ObjectId("5e9956400935cd687b34e817"), "fname" : "sarada" }
{ "_id" : ObjectId("5e9956590935cd687b34e818"), "fname" : "divya" }
{ "_id" : ObjectId("5e99566f0935cd687b34e819"), "fname" : "nobita" }

--------------------------------------------------------------------------------------

3.  to display the all fields   exclude but the field id for all the documents in the collection.

> db.Employee.find({},{"_id":0})

OUTPUT:

{ "id" : "1", "fname" : "krishna", "salary" : [ 10000, 15000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "hyd" }
{ "id" : "2", "fname" : "rama", "salary" : [ 12000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "chennai" }
{ "id" : "3", "fname" : "amal", "salary" : [ 22000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "bombay" }
{ "id" : "4", "fname" : "ankit", "salary" : [ 12000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "Banglore" }
{ "id" : "5", "fname" : "sarada", "salary" : [ 21000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "gurgaon" }
{ "id" : "6", "fname" : "divya", "salary" : [ 21000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "gurgaon" }
{ "id" : "7", "fname" : "nobita", "salary" : [ 18000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "Banglore" }

--------------------------------------------------------------------------------------

4    to display the first 5 Employees


> db.employee.find().limit(5)

OUTPUT:

{ "_id" : ObjectId("5e994dd70935cd687b34e80a"), "id" : "1", "fname" : "krishna", "salary" : "[10000,15000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000]", "city" : "hyd" }
{ "_id" : ObjectId("5e994f610935cd687b34e80b"), "id" : "2", "fname" : "rama", "salary" : "[12000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000]", "city" : "chennai" }
{ "_id" : ObjectId("5e994fa20935cd687b34e80c"), "id" : "3", "fname" : "amal", "salary" : "[22000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000]", "city" : "bombay" }
{ "_id" : ObjectId("5e994fe20935cd687b34e80d"), "id" : "4", "fname" : "ankit", "salary" : "[12000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000]", "city" : "Banglore" }
{ "_id" : ObjectId("5e994ffe0935cd687b34e80e"), "id" : "5", "fname" : "sarada", "salary" : "[21000,25000,17000,14000,17000,16000,18000,15000,19000,21000,22100,25000]", "city" : "gurgaon" }

--------------------------------------------------------------------------------------

5.  to display the next 2 Employees after skipping first 5

> db.Employee.find().limit(2).skip(5)

OUTPUT:

{ "_id" : ObjectId("5e9956590935cd687b34e818"), "id" : "6", "fname" : "divya", "salary" : [ 21000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "gurgaon" }
{ "_id" : ObjectId("5e99566f0935cd687b34e819"), "id" : "7", "fname" : "nobita", "salary" : [ 18000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "Banglore" }

--------------------------------------------------------------------------------------

6.  to find the Employee who stay in Gurgaon city 

> db.Employee.find({"city":"gurgaon"})

OUTPUT:

{ "_id" : ObjectId("5e9956400935cd687b34e817"), "id" : "5", "fname" : "sarada", "salary" : [ 21000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "gurgaon" }
{ "_id" : ObjectId("5e9956590935cd687b34e818"), "id" : "6", "fname" : "divya", "salary" : [ 21000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "gurgaon" }

--------------------------------------------------------------------------------------

7.  to find the Employee who jan salary is less than 20000

> db.Employee.find({"salary.0":{$lt:20000}})

OUTPUT :

{ "_id" : ObjectId("5e9955eb0935cd687b34e813"), "id" : "1", "fname" : "krishna", "salary" : [ 10000, 15000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "hyd" }
{ "_id" : ObjectId("5e9955f70935cd687b34e814"), "id" : "2", "fname" : "rama", "salary" : [ 12000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "chennai" }
{ "_id" : ObjectId("5e9956290935cd687b34e816"), "id" : "4", "fname" : "ankit", "salary" : [ 12000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "Banglore" }
{ "_id" : ObjectId("5e99566f0935cd687b34e819"), "id" : "7", "fname" : "nobita", "salary" : [ 18000, 25000, 17000, 14000, 17000, 16000, 18000, 15000, 19000, 21000, 22100, 25000 ], "city" : "Banglore" }

--------------------------------------------------------------------------------------

8.  to find the Employee who jan salary is less than 20000 and who stay in Gurgaon city.

>db.Employee.find({$and:[{"salary.0":{$lt:20000}},{"city":"gurgaon"}]})

--------------------------------------------------------------------------------------

9. to find the total salary of jan month for all the employee.

> db.Employee.aggregate([{$group : {"_id" :"null", total_salary : {$sum : "$salary.1"}}}])
--------------------------------------------------------------------------------------

10. count how any employee stay in Gurgaon city.

> db.Employee.find({"city":"gurgaon"}).count()

OUTPUT:

2








